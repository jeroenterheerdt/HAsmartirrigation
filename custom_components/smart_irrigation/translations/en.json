{
  "config": {
    "abort": {
      "single_instance_allowed": "Only a single configuration of Smart Irrigation is allowed."
    },
    "error": {
      "auth": "Weather service API key incorrect",
      "name": "Specify an unique name for the integration."
    },
    "step": {
      "user": {
        "title": "General set up",
        "description": "If you need help with the configuration, please see https://github.com/jeroenterheerdt/HASmartIrrigation",
        "data": {
          "name": "Unique name of the integration",
          "use_weather_service": "Use a weather service (Open Weather Map, Pirate Weather, or KNMI) for weather data or forecasting. Enable this option if you intent to use one of the supported weather services for at least part of the weather data, including forecasting. Disable this option if you want to use another source, such as your own weather station, exclusively. In this case, Smart Irrigation will not be able to use forecasts."
        }
      },
      "step1": {
        "title": "Weather service API set up",
        "description": "If you need help with the configuration, please see https://github.com/jeroenterheerdt/HASmartIrrigation",
        "data": {
          "weather_service": "Weather service to use",
          "weather_service_api_key": "API key for weather service",
          "weather_service_api_version": "Weather service API version"
        }
      }
    }
  },
  "options": {
    "error": {
      "auth": "Weather service API key or version incorrect"
    },
    "step": {
      "init": {
        "title": "Weather service API set up",
        "description": "If you need help with the configuration, please see https://github.com/jeroenterheerdt/HASmartIrrigation",
        "data": {
          "use_weather_service": "Use a weather service (Open Weather Map, Pirate Weather, or KNMI) for weather data or forecasting. Enable this option if you intent to use one of the supported weather services for at least part of the weather data, including forecasting. Disable this option if you want to use another source, such as your own weather station, exclusively. In this case, Smart Irrigation will not be able to use forecasts."
        }
      },
      "step1": {
        "title": "Weather service API set up",
        "description": "If you need help with the configuration, please see https://github.com/jeroenterheerdt/HASmartIrrigation",
        "data": {
          "weather_service": "Weather service to use",
          "weather_service_api_key": "API key for weather service",
          "weather_service_api_version": "Weather service API version"
        }
      }
    }
  },
  "services": {
    "calculate_all_zones": {
      "name": "Calculate all zones",
      "description": "Calculate all zones in automatic mode",
      "fields":{
        "delete_weather_data": {
          "name": "Delete weather data",
          "description": "Delete weather data after calculation"
        }
      }
    },
    "calculate_zone": {
      "name": "Calculate zone",
      "description": "Calculate specified zone",
      "fields": {
        "entity": {
          "name": "Entity",
          "description": "Zone to calculate"
        },
        "delete_weather_data": {
          "name": "Delete weather data",
          "description": "Delete weather data for the zone after calculation"
        }
      }
    },
    "update_all_zones": {
      "name": "Update all zones",
      "description": "Update weatherdata for all zones in automatic mode"
    },
    "update_zone": {
      "name": "Update zone",
      "description": "Update weatherdata for specified zone",
      "fields": {
        "entity": {
          "name": "Entity",
          "description": "Zone to update"
        }
      }
    },
    "set_bucket": {
      "name": "Set bucket",
      "description": "Set bucket for a zone to a specific value",
      "fields": {
        "entity": {
          "name": "Entity",
          "description": "Zone to set bucket for"
        },
        "new_bucket_value": {
          "name": "New bucket value",
          "description": "new value of the bucket"
        }
      }
    },
    "set_all_buckets": {
      "name": "Set all buckets",
      "description": "Set buckets for all zones to a specific value",
      "fields": {
        "new_bucket_value": {
          "name": "New bucket value",
          "description": "new value of the bucket"
        }
      }
    },
    "reset_bucket": {
      "name": "Reset bucket",
      "description": "Reset bucket for a zone to 0",
      "fields": {
        "entity": {
          "name": "Entity",
          "description": "Zone to reset bucket for"
        }
      }
    },
    "reset_all_buckets": {
      "name": "Reset all buckets",
      "description": "Reset bucket for all zones to 0"
    },
    "clear_all_weather_data": {
      "name": "Clear all weather data",
      "description": "Clear weather data for all zones"
    },
    "set_multiplier": {
      "name": "Set multiplier",
      "description": "Set multiplier for a zone to a specific value",
      "fields": {
        "entity": {
          "name": "Entity",
          "description": "Zone to set multiplier for"
        },
        "new_multiplier_value": {
          "name": "New multiplier value",
          "description": "new value of the multiplier"
        }
      }
    },
    "set_all_multipliers": {
      "name": "Set all multipliers",
      "description": "Set multipliers for all zones to a specific value",
      "fields": {
        "new_multiplier_value": {
          "name": "New multiplier value",
          "description": "new value of the multiplier"
        }
      }
    },
    "set_state": {
      "name": "Set the state of a zone",
      "description": "Set the state of a zone to a specific value",
      "fields": {
        "entity": {
          "name": "Entity",
          "description": "Zone to set state for"
        },
        "new_state_value": {
          "name": "New state value",
          "description": "New value of the state"
        }
      }
    },
    "set_zone": {
      "name": "Set the values of a zone",
      "description": "Set all configurable values of a zone",
      "fields": {
        "entity": {
          "name": "Entity",
          "description": "Zone to set configuration values"
        },
        "new_bucket_value": {
          "name": "New bucket value",
          "description": "New value for the bucket"
        },
        "new_multiplier_value": {
          "name": "New multiplier value",
          "description": "New value for the multiplier"
        },
        "new_duration_value": {
          "name": "New duration value",
          "description": "New value for the duration"
        },
        "new_state_value": {
          "name": "New state value",
          "description": "New value of the state"
        },
        "new_throughput_value": {
          "name": "New throughput value",
          "description": "New value for the throughput"
        }
      }
    }
  }
}
